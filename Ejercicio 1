
EJERCICIO #1-EN XAMARIN
Datos y tipos de Datos


CODIGO MAINPAGE.XAML

<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="EJERCICIO_1.MainPage"
             BackgroundColor="#f8c291">

    <ScrollView>
        <StackLayout Orientation="Vertical" Padding="20" Spacing="15">

            <Label
                Text="Datos y Tipos de Datos üìä"
                FontSize="26"
                FontAttributes="Bold"
                HorizontalOptions="Center"
                TextColor="red" />

            <Entry x:Name="InputField"
                   Placeholder="Ingrese un valor"
                   PlaceholderColor="Gray"
                   TextColor="black"
                   BackgroundColor="#FFFFE0"
                   HeightRequest="50" />

            <Button Text="Iniciar"
                    x:Name="DetermineButton"
                    BackgroundColor="black"
                    TextColor="White"
                    FontAttributes="Bold"
                    CornerRadius="8"
                    HeightRequest="50"
                    Clicked="OnDetermineDataTypeClicked" />
            <!-- El comentario problem√°tico ha sido eliminado de la l√≠nea anterior -->

            <Frame x:Name="ResultFrame"
                   BackgroundColor="#90EE90"
                   Padding="15"
                   CornerRadius="8"
                   IsVisible="False">
                <Label x:Name="ResultLabel"
                       Text=""
                       FontSize="18"
                       TextColor="black"
                       HorizontalTextAlignment="Center" />
            </Frame>

        </StackLayout>
    </ScrollView>
</ContentPage>




CODIGO MAINPAGE.XAML.CS


using System;
using System.Globalization;
using Xamarin.Forms;

namespace EJERCICIO_1
{
    public partial class MainPage : ContentPage
    {
        public MainPage()
        {
            InitializeComponent();
        }

        private void OnDetermineDataTypeClicked(object sender, EventArgs e)
        {
            try
            {
                string input = InputField.Text;

                if (string.IsNullOrWhiteSpace(input))
                {
                    ResultLabel.Text = "La entrada no puede estar vac√≠a.";
                    ResultFrame.IsVisible = true;
                    return;
                }

                string resultText = DetermineDataType(input);
                ResultLabel.Text = resultText;
                ResultFrame.IsVisible = true;
            }
            catch (Exception ex)
            {
                ResultLabel.Text = $"Error: {ex.Message}";
                ResultFrame.IsVisible = true;
            }
        }

        private string DetermineDataType(string input)
        {
            // Intenta parsear como int
            if (int.TryParse(input, out _))
                return "El tipo de dato es:\nint";

            // Intenta parsear como double (usando InvariantCulture para '.' y CurrentCulture para ',')
            if (double.TryParse(input, NumberStyles.Any, CultureInfo.InvariantCulture, out _) ||
                double.TryParse(input, NumberStyles.Any, CultureInfo.CurrentCulture, out _))
                return "El tipo de dato es:\ndouble";

            // Intenta parsear como bool
            if (bool.TryParse(input, out _))
                return "El tipo de dato es:\nbool";

            // Intenta parsear como DateTime
            DateTime parsedDate;
            // Intenta formato espec√≠fico y luego un parseo m√°s general con la cultura actual
            if (DateTime.TryParseExact(input, "yyyy-MM-dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out parsedDate) ||
                DateTime.TryParse(input, CultureInfo.CurrentCulture, DateTimeStyles.None, out parsedDate))
            {
                // D√≠a de la semana en el idioma de la cultura actual del dispositivo
                string dayOfWeek = parsedDate.ToString("dddd", CultureInfo.CurrentCulture);
                // Si prefieres siempre en ingl√©s:
                // string dayOfWeek = parsedDate.ToString("dddd", CultureInfo.InvariantCulture);

                return $"El tipo de dato es:\nDateTime\n" +
                       $"Formato detectado: {parsedDate:yyyy-MM-dd}\n" +
                       $"D√≠a de la semana:\n{dayOfWeek}\n" +
                       $"Mes: {parsedDate.Month}\n" +
                       $"A√±o: {parsedDate.Year}";
            }

            // Si nada de lo anterior funciona, es un string
            return $"El tipo de dato es:\nstring";
        }
    }
}
